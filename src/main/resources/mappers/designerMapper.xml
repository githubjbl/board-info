<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="designer">
	
	<select id="check" resultType="int">
		select nvl(max(dnum),0) dnum
		from designer
		where designer=#{designer}
	</select>
	
	<insert id="insert">
		insert into designer (dnum, designer, userid)
		values (seq_designer.nextval, #{designer}, #{userid})
	</insert>
	
	<insert id="insertmapping">
		insert into game_designer (gnum,dnum)
		values (seq_game.currval,seq_designer.currval)
	</insert>
	
	<select id="designer_num" resultType="int">
		select dnum
		from designer
		where designer=#{designer} 
	</select>
	
	<insert id="insertmapping_dnum">
		insert into game_designer (gnum, dnum)
		values (seq_game.currval,#{dnum})
	</insert>

	<select id="getAuto" resultType="designerDto">
		select designer
		from designer
		where upper(designer) like upper(#{input})||'%'
		order by designer
	</select>

	<select id="view" resultType="designerDto">
		select d.dnum, d.designer
		from designer d, game_designer gd
		where d.dnum = gd.dnum and gd.gnum = #{gnum}
	</select>

	<select id="updatecheck" resultType="int">
		select count(*)
		from game_designer gd, designer d
		where gd.dnum = d.dnum and gd.gnum = #{gnum} and d.designer = #{designer}
	</select>

	<insert id="insertmapping_update">
		insert into game_designer (gnum, dnum)
		values (#{gnum},#{dnum})
	</insert>

	<select id="viewDesigner" resultType="String">
		select d.designer
		from designer d, game_designer gd
		where d.dnum = gd.dnum and gd.gnum = #{gnum}
	</select>

	<delete id="deleteGame_Designer">
		delete
		from 	game_designer
		where 	gnum = #{gnum}
		and 	dnum =
				(select	dnum
				 from	designer
				 where	designer=#{designer})
	</delete>

	<select id="totalSearch" resultType="designerDto">
		SELECT 	dnum, designer, rn
		from	(
				SELECT 	dnum, designer, rownum rn
				from	(
						select 	dnum, designer
						from	designer
		<if test="gameKeyword != null and !'none'.equalsIgnoreCase(gameKeyword)">
						where	regexp_like(designer, #{gameKeyword},'i')
						order by
							CASE WHEN regexp_like(designer, '^'||#{gameKeyword},'i')
							THEN 1
        			        ELSE 2
        			        END
		</if>
        			    )
		<choose>
			<when test="filter != null and 'none'.equalsIgnoreCase(filter)">
				)
				where rn between 1 and 12
			</when>
			<otherwise>
				)
				where rn between #{start} and #{end}
			</otherwise>
		</choose>
	</select>

	<select id="totalSearchCount" resultType="int">
		select 	count(*)
		from	designer
		<if test="gameKeyword != null and !'none'.equalsIgnoreCase(gameKeyword)">
		where	regexp_like(designer, #{gameKeyword},'i')
		</if>
	</select>

	<select id="confirmList" resultType="designerDto">
		select 	a.*
		from 	designer a
		left join  game_designer ga
		on      a.dnum = ga.dNUM
		where   ga.dnum is null
	</select>

	<delete id="deleteitem">
		delete from designer where dnum=#{num}
	</delete>

	<insert id="update_designer_mapping">
		insert into game_designer (gnum, dnum)
		<choose>
			<when test="dnum != 0">
				values (#{gnum},#{dnum})
			</when>
			<otherwise>
				values (#{gnum}, seq_designer.currval)
			</otherwise>
		</choose>
	</insert>
	
</mapper>















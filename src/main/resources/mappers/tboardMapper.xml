<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="tboard">
    <select id="selectBoardList" resultType="tboardDto">
        <include refid="paging_header"/>
        select t.tb_num,
        t.title,
        t.price,
        t.description,
        t.view_count,
        t.re_count,
        t.category,
        t.create_user,
        t.create_date,
        t.del,
        t.update_user,
        t.update_date,
        t.address1,
        t.address2,
        f.fullName as first_img

        from t_board t
        LEFT JOIN (
            SELECT
                MIN(file_reg_num) AS min_file_reg_num,
                FULLNAME,
                TB_NUM
            FROM
                TB_FILES
            GROUP BY
                TB_NUM,
                FULLNAME
            ) f ON t.TB_NUM = f.TB_NUM

        where t.del = 'N'

        <include refid="search"/>
        order by t.tb_num desc
        <include refid="paging_footer"/>
    </select>

    <select id="countArticle" resultType="int">
        select count(*) from t_board
        where del = 'N'
        <include refid="search"/>
    </select>

    <sql id="paging_header">
        select *
        from (select rownum as rn, A.*
              from (
    </sql>

    <sql id="search">
        <choose>
            <when test="search_option != 'all' ">

                <if test="select_category != 'all' ">
                    and category = #{select_category}
                </if>
                and ${search_option} like #{keyword}
            </when>
            <otherwise>

                <if test="select_category != 'all' ">
                    and category = #{select_category}
                </if>
                and (create_user like #{keyword} or title like #{keyword} or
                description like #{keyword})
            </otherwise>
        </choose>
    </sql>

    <sql id="paging_footer">
        )A
		) where rn between
        #{start}
        and
        #{end}
    </sql>


    <insert id="insertBoard">
        <choose>
            <when test="address1 != null and !address1.equals('')">
                insert into t_board (tb_num, title, price, description, category, create_user, address1, address2,
                address3, place_name, lat, lng)
                values (seq_tboard.nextval, #{title}, #{price}, #{description}, #{category}, #{create_user},
                #{address1}, #{address2}, #{address3}, #{place_name}, #{lat}, #{lng})
            </when>
            <otherwise>
                insert into t_board (tb_num, title, price, description, category, create_user)
                values (seq_tboard.nextval, #{title}, #{price}, #{description}, #{category}, #{create_user})
            </otherwise>
        </choose>
    </insert>

    <select id="viewPost" resultType="tboardDto">
        select *
        from t_board
        where tb_num = #{tb_num}
    </select>

    <update id="updatePost">
        update t_board
        set title       = #{title},
            price       = #{price},
            description = #{description},
            category    = #{category},
            update_date = sysdate
        where tb_num = #{tb_num}
    </update>

    <delete id="deletePost">
        update t_board
        set del = #{Y}
        where tb_num = #{tb_num}
    </delete>

    <update id="increaseViewcnt">
        update t_board
        set view_count = view_count + 1
        where tb_num = #{tb_num}
    </update>

    <update id="increaseRecnt">
        update t_board
        set re_count = re_count + 1
        where tb_num = #{tb_num}
    </update>

    <select id="getAttachList" resultType="String">
        select fullName
        from tb_files
        where tb_num = #{tb_num}
        order by FILE_REG_NUM
    </select>

    <insert id="insertFile">
        insert into tb_files (file_reg_num, tb_num,
                              fullName, formatName, fileData, create_user)
        values ((seq_tb_files.nextval), (seq_tboard.currval), #{fullName}, #{formatName}, #{fileData}, #{create_user})
    </insert>

    <select id="getFirstImageList" resultType="String">
        SELECT tb_num, LISTAGG(fullName, ',') WITHIN GROUP (ORDER BY file_reg_num) AS fileNames
        FROM TB_FILES
        WHERE (tb_num
            , file_reg_num) IN (
            SELECT tb_num
            , MIN (file_reg_num)
            FROM TB_FILES
            GROUP BY tb_num
            )
        GROUP BY tb_num
    </select>


    <delete id="deleteAttach">
        update into tb_files ()
    </delete>

    <!--마이페이지에서 중고거래 게시판에 작성한 목록 출력 sql
    썸네일 이미지 포함, tb_files 테이블에서 MIN(file_reg_num)으로 tb_num에 해당하는 이미지 파일 중 가장 빠른 순번을 가져옴-->
    <select id="getTbList" resultType="tboardDto">
        select t.tb_num,
            t.title,
            t.price,
            t.description,
            t.view_count,
            t.re_count,
            t.category,
            t.CREATE_DATE,
            t.create_user,
            t.del,
            t.update_user,
            t.update_date,
            t.address1,
            t.address2,
            f.fullName as first_img --썸네일 이미지

        from t_board t
                 LEFT JOIN (
            SELECT
                MIN(file_reg_num) AS min_file_reg_num,
                FULLNAME,
                TB_NUM
            FROM
                TB_FILES
            GROUP BY
                TB_NUM,
                FULLNAME
        ) f ON t.TB_NUM = f.TB_NUM

        where t.del = 'N' and CREATE_USER = #{userid}
        order by t.tb_num desc
    </select>

    <select id="getHomeList" resultType="tboardDto">
        select *
        from
            (
                select a.*, row_number() over(order by a.create_date desc) rn
                from
                    (
                        select tb_num, create_date, title, category,
                               (select count(*)
                                from tb_comments c
                                where c.tb_num = t.tb_num) as re_count
                        from t_board t
                        where t.del = 'N'
                    )a
            )
        where rn between 1 and #{size}
    </select>

    <select id="totalSearch" resultType="tboardDto">
        <if test="filter != null and 'none'.equalsIgnoreCase(filter)">
        select  tb_num, create_date, title, category, address1, address2, view_count, price,re_count
        from    (
        </if>
                select  tb_num, create_date, title, category, address1, address2, view_count, price,
                        (select count(*)
                        from    tb_comments c
                        where   c.tb_num = t.tb_num and del='N'
                        ) as re_count
                from t_board t
                where regexp_like(title, #{gameKeyword},'i') AND t.del = 'N'
                order by
		            CASE WHEN regexp_like(title, '^'||#{gameKeyword},'i')
		            THEN 1
                    ELSE 2
                    END
        <if test="filter != null and 'none'.equalsIgnoreCase(filter)">
                )
        where rownum between 1 and 6
        </if>
    </select>

</mapper>

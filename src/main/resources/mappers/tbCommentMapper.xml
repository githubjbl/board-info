<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="tbComment">
    <select id="getCommentList" resultType="tbCommentDto">
        select *
        from tb_comments
        where tb_num = #{tb_num}
        order by create_date desc
    </select>

    <!-- Post replyCount -->
    <select id="replyCount">
        select count(*)
        from tb_comments
        where tb_num = #{tb_num}
    </select>

    <!-- 댓글들을 ArrayList (dto 반환함) -->
    <select id="getReplyList" resultType="tbCommentDto">
        select reply_reg_num
             , parent_reply
             , inner_order
             , depth
             , content
             , create_user
             , to_char(create_date, 'YYYY-MM-DD HH24:MI:SS') as create_date
             , UPDATE_USER
             , to_char(UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') as update_date
             , DEL
        from tb_comments
        where tb_num = #{tb_num}
        order by parent_reply, inner_order
    </select>

    <select id="getMotherDto" resultType="tbCommentDto">
        select reply_reg_num, parent_reply, depth, inner_order
        from tb_comments
        where reply_reg_num = #{mother_reply}
    </select>

    <!-- 댓글 순서 -->
    <select id="getTargetReplyOrder" resultType="int">
        select nvl(
                       (select min(inner_order)
                        from tb_comments
                        where parent_reply = #{parent_reply}
                          and depth <![CDATA[<]]>= #{depth}
                          and inner_order <![CDATA[>]]> #{inner_order})
                   ,
                       (select max(inner_order) + 1
                        from tb_comments
                        where parent_reply = #{parent_reply})
                   )
        from dual
    </select>

    <!--  -->
    <select id="getLast" resultType="int">
        select count(*)
        from tb_comments
        where tb_num = #{tb_num}
    </select>

    <!-- 댓글C -->
    <insert id="insertReply">
        insert into tb_comments
        (reply_reg_num, tb_num, parent_reply, inner_order, depth, content, create_user)
        values
        (nvl((select max(reply_reg_num) from tb_comments)+1, 1), #{tb_num},
        <choose>
            <when test="parent_reply == null">
                nvl((select max(reply_reg_num) from tb_comments)+1,1)
            </when>
            <otherwise>
                #{parent_reply}
            </otherwise>
        </choose>
        , #{inner_order}, #{depth}, #{content}, #{create_user})
    </insert>

    <!--  -->
    <update id="replyOrderUpdate">
        update tb_comments
        set inner_order = inner_order + 1
        where parent_reply = #{parent_reply}
          and inner_order >= (#{inner_order})
    </update>

    <!-- re_dto 객체 반환 -->
    <select id="getReplyContent" resultType="String">
        select content
        from tb_comments
        where reply_reg_num = #{reply_reg_num}
    </select>

    <!-- 댓글U -->
    <update id="editReply">
        update tb_comments
        set content     = #{content},
            update_date = sysdate,
            update_user = #{update_user}
        where reply_reg_num = #{reply_reg_num}
    </update>

    <!-- 댓글D -->
    <delete id="deleteReply">
        update tb_comments
        set del         = 'Y',
            update_date = sysdate,
            update_user = #{update_user}
        where reply_reg_num = #{reply_reg_num}
    </delete>


</mapper>















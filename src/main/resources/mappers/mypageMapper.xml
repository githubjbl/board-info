<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="mypage">
    <select id="getUserInfo" resultType="mypageDto">
        select PROFILE
             , userid
             , NICKNAME
             , NAME
             , to_char(JOIN_DATE, 'YYYY-MM-DD')  as join_date

             , (select count(*)
                from (SELECT *
                      FROM game_rating
                      WHERE USERID = #{uesrid})) as grCount
             , (select count(*)
                from (
                         (SELECT gnum, CREATE_USER
                          FROM game
                          WHERE CREATE_USER = #{uesrid}
                          UNION ALL
                          SELECT REG_NUM, REVIEW.CREATE_USER
                          FROM review
                          WHERE REVIEW.CREATE_USER = #{uesrid}
                          UNION ALL
                          SELECT GATHERING_ID, WRITER_ID as CREATE_USER
                          FROM gathering
                          WHERE WRITER_ID = #{uesrid}
                          UNION ALL
                          SELECT TB_NUM, T_BOARD.CREATE_USER
                          FROM t_board
                          WHERE T_BOARD.CREATE_USER = #{uesrid}))
                where create_user = #{uesrid})   as totCount

             , (select count(*)
                from (SELECT REPLY_REG_NUM, CREATE_USER
                      FROM REPLY_COMMENTS
                      WHERE CREATE_USER = #{uesrid}
                      UNION ALL
                      SELECT REPLY_ID, CREATOR_ID as CREATE_USER
                      FROM gathering_reply
                      WHERE CREATOR_ID = #{uesrid}
                      UNION ALL
                      SELECT TB_COMMENTS.REPLY_REG_NUM, TB_COMMENTS.CREATE_USER as CREATE_USER
                      FROM tb_comments
                      WHERE TB_COMMENTS.CREATE_USER = #{uesrid})
                where CREATE_USER = #{uesrid})   as reTotCount

             , (select count(*)
                from (SELECT gnum, writer_id, USER_ID as CREATE_USER
                      FROM GAME_RATING_LIKE
                      WHERE writer_id = #{uesrid}
                      UNION ALL
                      SELECT goodkey, reviewpk, CREATE_USER
                      FROM REVIEWGOOD
                      WHERE CREATE_USER = #{uesrid}
                      UNION ALL
                      SELECT GOODKEY, TB_NUM, USERID as CREATE_USER
                      FROM TRADEGOOD
                      WHERE USERID = #{uesrid})
                where create_user = #{uesrid})   as likeTotCount
        from member m
        where userid = #{uesrid}
    </select>


    <!--userid로 gathering 테이블에서 데이터 가져옴
    6개만-->
    <select id="gaListByUserid" resultType="mypageDto">
        select *
        from (select a.*, rownum rn
              from (select gathering_id
                         , writer_id                                        as create_user
                         , to_char(post_date, 'YYYY-MM-DD HH24:MI:SS')      as create_date
                         , g.TITLE
                         , to_char(GATHERING_DATE, 'YYYY-MM-DD HH24:MI:SS') as GATHERING_DATE
                         , address1
                         , address2
                         , place_name
                         , maxpeople
                         , view_count
                         , nickname
                         , (select count(*)
                            from gathering_reply
                            where gathering_id = g.gathering_id)            as garCount
                         , (select count(*)
                            from attendee
                            where gathering_id = g.gathering_id
                              and type = 'a')                               as attendee_count
                    from gathering g
                             join member m on g.writer_id = m.userid
                    where show = 'Y'
                      and writer_id = #{userid}
                    order by gathering_id
                            desc) a)
        where rn between 1 and 10
    </select>

    <!--id로 review list 가져오기
    6개만-->
    <select id="rvListByUserid" resultType="reviewDto">
        select *
        from (select a.*, rownum rn
              from (SELECT R.REG_NUM             AS REGNUM
                         , M.USERID
                         , M.NICKNAME
                         , R.CATEGORY
                         , R.VIEWS
                         , C.GNUM
                         , (SELECT GAMETITLE
                            FROM GAME
                            WHERE GNUM = C.GNUM) AS GAMETITLE
                         , R.TITLE
                         , R.REVIEW_DETAIL       AS
                                                    REVIEWDETAIL
                         , (SELECT COUNT(1)
                            FROM REVIEWGOOD
                            WHERE REVIEWPK = R.REG_NUM
                              AND GOOD = 'Y'
                              AND DEL = 'N')     AS GOOD
                         , (SELECT COUNT(1) FROM REPLY_COMMENTS WHERE DEL = 'N' AND REG_NUM = R.REG_NUM)
                                                 AS RECNT
                         , R.DEL
                         , R.CREATE_USER         AS CREATEUSER
                         , TO_CHAR(R.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                                 AS CREATEDATE
                         , R.UPDATE_USER         AS UPDATEUSER
                         , TO_CHAR(R.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                                 AS UPDATEDATE
                    FROM REVIEW R
                       , MEMBER M
                       , CHOICE_GAME C
                    WHERE R.CREATE_USER = M.USERID(+)
                      AND R.REG_NUM
                        = C.REVIEWREGNUM(+)
                      AND R.DEL = 'N'
                      and R.CREATE_USER = #{userid} /*검색*/ /*디테일 진입*/
                    ORDER BY CREATEDATE DESC) a)
        where rn between 1 and 6
    </select>

    <!--메인 페이지 전체-->
    <!-- game_rating 테이블과 game 테이블을 join 해서 r.gnum 으로 g.gametitle과 g.bgg_thumbnail 컬럼값 가져옴
그리고 game_rating_like 테이블의 count를 r.userid 로 가져옴
6개만-->
    <select id="rateListbyUserid" resultType="gameRatingDTO">
        select *
        from (select a.*, rownum rn
              from (select r.userid
                         , count(l.user_id)                     as likeCount
                         , r.gnum
                         , g.GAMETITLE
                         , g.BGG_THUMBNAIL
                         , r.rating
                         , r.weight
                         , r.participant1
                         , r.participant2
                         , r.participant3
                         , r.participant4
                         , r.participant5
                         , r.rating_comment
                         , to_char(r.create_date, 'YYYY-MM-dd') as create_date
                    from game_rating r
                             join game g on r.GNUM = g.GNUM
                             left join game_rating_like l on r.userid = l.writer_id
                    where r.userid = #{userid}
                    group by r.userid, r.gnum, r.rating, r.weight, r.participant1, r.participant2, r.participant3
                           , r.participant4
                           , r.participant5, r.rating_comment, r.create_date, g.GAMETITLE, g.BGG_THUMBNAIL
                    order by likeCount desc, create_date desc) a)
        where rn between 1 and 6
    </select>

    <!--마이페이지에서 중고거래 게시판에 작성한 목록 출력 sql
썸네일 이미지 포함, tb_files 테이블에서 MIN(file_reg_num)으로 tb_num에 해당하는 이미지 파일 중 가장 빠른 순번을 가져옴
6개만-->
    <select id="getTbList" resultType="tboardDto">
        select *
        from (select a.*, rownum rn
              from (select t.tb_num
                         , t.title
                         , to_char(t.price, '999,999,999') as price
                         , t.description
                         , t.view_count
                         , (select count(*) FROM TB_COMMENTS WHERE tb_num = t.TB_NUM) as re_count /*댓글 수*/
                         , (select count(*) FROM TRADEGOOD WHERE TB_NUM = t.TB_NUM)   as good_count /*좋아요 수*/
                         , t.category
                         , to_char(t.create_date, 'YYYY-MM-dd HH24:MI:SS') as create_date
                         , t.create_user
                         , t.del
                         , t.update_user
                         , t.update_date
                         , t.address1
                         , t.address2
                         , f.fullName                                                 as tb_thumbnail /*썸네일 이미지*/

                    FROM t_board t
                             LEFT JOIN (SELECT MIN(file_reg_num) AS min_file_reg_num
                                             , FULLNAME
                                             , TB_NUM
                                        FROM TB_FILES
                                        GROUP BY TB_NUM, FULLNAME) f ON t.TB_NUM = f.TB_NUM

                    WHERE t.del = 'N'
                      AND CREATE_USER = #{userid}
                    order by t.tb_num desc) a)
        where rn between 1 and 6
    </select>

    <!--유저가 게임등록 요청 게시판에 작성한 글 조회 12개만-->
    <select id="giTabbed" resultType="myGiDto">
        select *
        from (select a.*, rownum rn
              from (SELECT g.gnum
                         , g.bggnum
                         , g.gametitle
                         , g.gametitle_eng
                         , g.release_year
                         , g.theme
                         , g.bgg_thumbnail
                         , ga.fullname           AS gamephoto_url
                         , to_char(g.create_date,
                                   'yyyy-mm-dd') as CREATE_DATE
                         , g.CREATE_USER
                         , g.CONFIRMED
                         , g.del
                    FROM game g
                             LEFT JOIN (SELECT gnum, fullname
                                        FROM (SELECT ROW_NUMBER() OVER (PARTITION BY gnum ORDER BY create_date DESC) rnum
                                                   , gnum
                                                   , fullname
                                              FROM game_attach)
                                        WHERE rnum = 1) ga ON g.gnum = ga.gnum
                    WHERE CREATE_USER = #{userid}
                    order by CREATE_DATE desc) a)
        where rn between 1 and 12
    </select>

    <!--유저가 작성한 게임인포 게시판 전체보기-->
    <select id="giMore" resultType="myGiDto">
        SELECT g.gnum
             , g.bggnum
             , g.gametitle
             , g.gametitle_eng
             , g.release_year
             , g.theme
             , g.bgg_thumbnail
             , ga.fullname           AS gamephoto_url
             , to_char(g.create_date,
                       'yyyy-mm-dd') as CREATE_DATE
             , g.CREATE_USER
             , g.CONFIRMED
             , g.del
        FROM game g
                 LEFT JOIN (SELECT gnum, fullname
                            FROM (SELECT ROW_NUMBER() OVER (PARTITION BY gnum ORDER BY create_date DESC) rnum
                                       , gnum
                                       , fullname
                                  FROM game_attach)
                            WHERE rnum = 1) ga ON g.gnum = ga.gnum
        WHERE CREATE_USER = #{userid}
        order by CREATE_DATE desc
    </select>


    <!--gameRating 12개만-->
    <select id="grTabbed" resultType="gameRatingDTO">
        select *
        from (select a.*, rownum rn
              from (select r.userid
                         , count(l.user_id)                     as likeCount
                         , r.gnum
                         , g.GAMETITLE
                         , g.BGG_THUMBNAIL
                         , r.rating
                         , r.weight
                         , r.participant1
                         , r.participant2
                         , r.participant3
                         , r.participant4
                         , r.participant5
                         , r.rating_comment
                         , to_char(r.create_date, 'YYYY-MM-dd') as create_date
                    from game_rating r
                             join game g on r.GNUM = g.GNUM
                             left join game_rating_like l on r.userid = l.writer_id
                    where r.userid = #{userid}
                    group by r.userid, r.gnum, r.rating, r.weight, r.participant1, r.participant2, r.participant3
                           , r.participant4
                           , r.participant5, r.rating_comment, r.create_date, g.GAMETITLE, g.BGG_THUMBNAIL
                    order by likeCount desc, create_date desc) a)
        where rn between 1 and 12
    </select>

    <!--gameRating 전부-->
    <select id="grMore" resultType="gameRatingDTO">
        select r.userid
             , count(l.user_id)                     as likeCount
             , r.gnum
             , g.GAMETITLE
             , g.BGG_THUMBNAIL
             , r.rating
             , r.weight
             , r.participant1
             , r.participant2
             , r.participant3
             , r.participant4
             , r.participant5
             , r.rating_comment
             , to_char(r.create_date, 'YYYY-MM-dd') as create_date
        from game_rating r
                 join game g on r.GNUM = g.GNUM
                 left join game_rating_like l on r.userid = l.writer_id
        where r.userid = #{userid}
        group by r.userid, r.gnum, r.rating, r.weight, r.participant1, r.participant2, r.participant3, r.participant4
               , r.participant5, r.rating_comment, r.create_date, g.GAMETITLE, g.BGG_THUMBNAIL
        order by likeCount desc, create_date desc
    </select>


    <!--리뷰 테이블 12개만-->
    <select id="rvTabbed" resultType="reviewDto">
        select *
        from (select a.*, rownum rn
              from (SELECT R.REG_NUM             AS REGNUM
                         , M.USERID
                         , M.NICKNAME
                         , R.CATEGORY
                         , R.VIEWS
                         , C.GNUM
                         , (SELECT GAMETITLE
                            FROM GAME
                            WHERE GNUM = C.GNUM) AS GAMETITLE
                         , R.TITLE
                         , R.REVIEW_DETAIL       AS
                                                    REVIEWDETAIL
                         , (SELECT COUNT(1)
                            FROM REVIEWGOOD
                            WHERE REVIEWPK = R.REG_NUM
                              AND GOOD = 'Y'
                              AND DEL = 'N')     AS GOOD
                         , (SELECT COUNT(1) FROM REPLY_COMMENTS WHERE DEL = 'N' AND REG_NUM = R.REG_NUM)
                                                 AS RECNT
                         , R.DEL
                         , R.CREATE_USER         AS CREATEUSER
                         , TO_CHAR(R.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                                 AS CREATEDATE
                         , R.UPDATE_USER         AS UPDATEUSER
                         , TO_CHAR(R.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                                 AS UPDATEDATE
                    FROM REVIEW R
                       , MEMBER M
                       , CHOICE_GAME C
                    WHERE R.CREATE_USER = M.USERID(+)
                      AND R.REG_NUM
                        = C.REVIEWREGNUM(+)
                      AND R.DEL = 'N'
                      and R.CREATE_USER = #{userid} /*검색*/ /*디테일 진입*/
                    ORDER BY CREATEDATE DESC) a)
        where rn between 1 and 12
    </select>

    <!--리뷰 테이블 더보기-->
    <select id="rvMore" resultType="reviewDto">
        SELECT R.REG_NUM             AS REGNUM
             , M.USERID
             , M.NICKNAME
             , R.CATEGORY
             , R.VIEWS
             , C.GNUM
             , (SELECT GAMETITLE
                FROM GAME
                WHERE GNUM = C.GNUM) AS GAMETITLE
             , R.TITLE
             , R.REVIEW_DETAIL       AS
                                        REVIEWDETAIL
             , (SELECT COUNT(1)
                FROM REVIEWGOOD
                WHERE REVIEWPK = R.REG_NUM
                  AND GOOD = 'Y'
                  AND DEL = 'N')     AS GOOD
             , (SELECT COUNT(1) FROM REPLY_COMMENTS WHERE DEL = 'N' AND REG_NUM = R.REG_NUM)
                                     AS RECNT
             , R.DEL
             , R.CREATE_USER         AS CREATEUSER
             , TO_CHAR(R.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                     AS CREATEDATE
             , R.UPDATE_USER         AS UPDATEUSER
             , TO_CHAR(R.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                     AS UPDATEDATE
        FROM REVIEW R
           , MEMBER M
           , CHOICE_GAME C
        WHERE R.CREATE_USER = M.USERID(+)
          AND R.REG_NUM
            = C.REVIEWREGNUM(+)
          AND R.DEL = 'N'
          and R.CREATE_USER = #{userid} /*검색*/ /*디테일 진입*/
        ORDER BY CREATEDATE DESC
    </select>


    <!--gathering 테이블 12개만-->
    <select id="gaTabbed" resultType="mypageDto">
        select *
        from (select a.*, rownum rn
              from (select g.gathering_id
                         , g.writer_id as create_user
                         , to_char(g.post_date, 'YYYY-MM-DD HH24:MI-SS') as gathering_date
                         , g.title
                         , to_char(g.gathering_date, 'YYYY-MM-DD HH24:MI-SS') as create_date
                         , g.address1
                         , g.address2
                         , g.maxpeople
                         , g.view_count
                         , m.nickname
                         , (select count(*)
                            from gathering_reply gar
                            where gar.gathering_id = g.gathering_id) as galLikeCount
                         , (select count(*)
                            from attendee at
                            where at.gathering_id = g.gathering_id
                              and at.type = 'a')                    as attendee_count
                    from gathering g
                             join member m on g.writer_id = m.userid
                    where g.show = 'Y'
                      and g.WRITER_ID = #{userid}
                    order by g.gathering_id
                            desc) a)
        where rn between 1 and 12
    </select>

    <!--gathering 더보기-->
    <select id="gaMore" resultType="mypageDto">
        select gathering_id
             , writer_id                                        as create_user
             , to_char(post_date, 'YYYY-MM-DD HH24:MI:SS')      as create_date
             , concat(substr(title, 1, 20), '...')              as shortedTitle
             , to_char(GATHERING_DATE, 'YYYY-MM-DD HH24:MI:SS') as GATHERING_DATE
             , address1
             , address2
             , place_name
             , maxpeople
             , view_count
             , nickname
             , (select count(*)
                from gathering_reply
                where gathering_id = g.gathering_id)            as garCount
             , (select count(*)
                from attendee
                where gathering_id = g.gathering_id
                  and type = 'a')                               as attendee_count
        from gathering g
                 join member m on g.writer_id = m.userid
        where show = 'Y'
          and writer_id = #{userid}
        order by gathering_id
                desc
    </select>


    <!--t_board 테이블 10개만-->
    <select id="trTabbed" resultType="tboardDto">
        select *
        from (select a.*, rownum rn
              from (select t.tb_num
                         , t.title
                         , t.price
                         , t.description
                         , t.view_count
                         , (select count(*) FROM TB_COMMENTS WHERE tb_num = t.TB_NUM) as re_count /*댓글 수*/
                         , (select count(*) FROM TRADEGOOD WHERE TB_NUM = t.TB_NUM)   as good_count /*좋아요 수*/
                         , t.category
                         , t.CREATE_DATE
                         , t.create_user
                         , t.del
                         , t.update_user
                         , t.update_date
                         , t.address1
                         , t.address2
                         , f.fullName                                                 as tb_thumbnail

                    FROM t_board t
                             LEFT JOIN (SELECT MIN(file_reg_num) AS min_file_reg_num
                                             , FULLNAME
                                             , TB_NUM
                                        FROM TB_FILES
                                        GROUP BY TB_NUM, FULLNAME) f ON t.TB_NUM = f.TB_NUM

                    WHERE t.del = 'N'
                      AND CREATE_USER = #{userid}
                    order by t.tb_num desc) a)
        where rn between 1 and 12
    </select>

    <!--t_board 테이블 다-->
    <select id="trMore" resultType="tboardDto">
        select t.tb_num
             , t.title
             , t.price
             , t.description
             , t.view_count
             , (select count(*) FROM TB_COMMENTS WHERE tb_num = t.TB_NUM) as re_count /*댓글 수*/
             , (select count(*) FROM TRADEGOOD WHERE TB_NUM = t.TB_NUM)   as good_count /*좋아요 수*/
             , t.category
             , t.CREATE_DATE
             , t.create_user
             , t.del
             , t.update_user
             , t.update_date
             , t.address1
             , t.address2
             , f.fullName                                                 as first_img --썸네일 이미지

        FROM t_board t
                 LEFT JOIN (SELECT MIN(file_reg_num) AS min_file_reg_num
                                 , FULLNAME
                                 , TB_NUM
                            FROM TB_FILES
                            GROUP BY TB_NUM, FULLNAME) f ON t.TB_NUM = f.TB_NUM

        WHERE t.del = 'N'
          AND CREATE_USER = #{userid}
        order by t.tb_num desc
    </select>


</mapper>















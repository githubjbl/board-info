<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="publisher">
	
	<select id="check" resultType="int">
		select nvl(max(pnum),0) pnum
		from publisher
		where publisher=#{publisher}
	</select>
	
	<insert id="insert">
		insert into publisher (pnum, publisher, userid)
		values (seq_publisher.nextval, #{publisher}, #{userid})
	</insert>
	
	<insert id="insertmapping">
		insert into game_publisher (gnum,pnum)
		values (seq_game.currval,seq_publisher.currval)
	</insert>
	
	<select id="publisher_num" resultType="int">
		select pnum
		from publisher
		where publisher=#{publisher} 
	</select>
	
	<insert id="insertmapping_pnum">
		insert into game_publisher (gnum,pnum)
		values (seq_game.currval,#{pnum})
	</insert>

	<select id="getAuto" resultType="publisherDto">
		select publisher
		from publisher
		where upper(publisher) like upper(#{input})||'%'
		order by publisher
	</select>

	<select id="view" resultType="publisherDto">
		select p.pnum, p.publisher
		from publisher p, game_publisher gp
		where p.pnum = gp.pnum and gp.gnum = #{gnum}
	</select>

	<select id="updatecheck" resultType="int">
		select count(*)
		from game_publisher gp, publisher p
		where gp.pnum = p.pnum and gp.gnum = #{gnum} and p.publisher = #{publisher}
	</select>

	<insert id="insertmapping_update">
		insert into game_publisher (gnum,pnum)
		values (#{gnum},#{pnum})
	</insert>

	<select id="viewPublisher" resultType="String">
		select p.publisher
		from publisher p, game_publisher gp
		where p.pnum = gp.pnum and gp.gnum = #{gnum}
	</select>

	<delete id="deleteGame_Publisher">
		delete
		from 	game_publisher
		where 	gnum = #{gnum}
		and 	pnum =
				(select	pnum
				 from	publisher
				 where	publisher=#{publisher})
	</delete>

	<select id="totalSearch" resultType="publisherDto">
		SELECT 	pnum, publisher, rn
		from	(
				SELECT 	pnum, publisher, rownum rn
				from	(
						select 	pnum, publisher
						from	publisher
		<if test="gameKeyword != null and !'none'.equalsIgnoreCase(gameKeyword)">
						where	regexp_like(publisher, #{gameKeyword},'i')
						order by
								CASE WHEN regexp_like(publisher, '^'||#{gameKeyword},'i')
								THEN 1
        				        ELSE 2
        				        END
		</if>
        				)
		<choose>
			<when test="filter != null and 'none'.equalsIgnoreCase(filter)">
				)
				where rn between 1 and 12
			</when>
			<otherwise>
				)
				where rn between #{start} and #{end}
			</otherwise>
		</choose>
	</select>

	<select id="totalSearchCount" resultType="int">
		select 	count(*)
		from	publisher
		<if test="gameKeyword != null and !'none'.equalsIgnoreCase(gameKeyword)">
		where	regexp_like(publisher, #{gameKeyword},'i')
		</if>
	</select>

	<select id="confirmList" resultType="publisherDto">
		select 	p.pnum, p.publisher
		from	publisher p
		left join 	(
					select 	pnum, count(*) count
					from	game_publisher
					group by pnum
					) gp
		on		p.pnum = gp.pnum
		where 	gp.count = 0
	</select>

	<delete id="deleteitem">
		delete from publisher where pnum=#{num}
	</delete>

	<insert id="update_publisher_mapping">
		insert into game_publisher (gnum, pnum)
		<choose>
			<when test="pnum != 0">
				values (#{gnum},#{pnum})
			</when>
			<otherwise>
				values (#{gnum}, seq_publisher.nextval)
			</otherwise>
		</choose>
	</insert>
	
</mapper>















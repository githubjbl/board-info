<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="mypage">
    <select id="getUserInfo" resultType="mypageDto">
        select PROFILE
             , NAME
             , to_char(JOIN_DATE, 'YYYY-MM-DD HH24:MI:SS') as joinDate
        from member m
        where userid = #{userid}
    </select>
    <select id="gaListByUserid" resultType="gatheringDTO">
        select gathering_id,
               m.userid,
               to_char(post_date, 'YYYY-MM-DD HH24:MI:SS') as                             post_date,
               title,
               gathering_date,
               address1,
               address2,
               place_name,
               maxpeople,
               view_count,
               nickname,
               (select count(*)
                from attendee
                where gathering_id = g.gathering_id
                  and type = 'a')                          as                             attendee_count,
               (select count(*) from GATHERING_REPLY where GATHERING_ID = g.GATHERING_ID) re_count
        from gathering g
                 join member m on g.writer_id = m.userid
        where show = 'y'
          and userid = #{userid}
        order by gathering_id
                desc
    </select>

    <!--id로 review list 가져오기-->
    <select id="rvListByUserid" resultType="reviewDto">
        SELECT R.REG_NUM             AS REGNUM
             , M.USERID
             , M.NICKNAME
             , R.CATEGORY
             , R.VIEWS
             , C.GNUM
             , (SELECT GAMETITLE
                FROM GAME
                WHERE GNUM = C.GNUM) AS GAMETITLE
             , R.TITLE
             , R.REVIEW_DETAIL       AS
                                        REVIEWDETAIL
             , (SELECT COUNT(1)
                FROM REVIEWGOOD
                WHERE REVIEWPK = R.REG_NUM
                  AND GOOD = 'Y'
                  AND DEL = 'N')     AS GOOD
             , (SELECT COUNT(1) FROM REPLY_COMMENTS WHERE DEL = 'N' AND REG_NUM = R.REG_NUM)
                                     AS RECNT
             , R.DEL
             , R.CREATE_USER         AS CREATEUSER
             , TO_CHAR(R.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                     AS CREATEDATE
             , R.UPDATE_USER         AS UPDATEUSER
             , TO_CHAR(R.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS')
                                     AS UPDATEDATE
        FROM REVIEW R,
             MEMBER M,
             CHOICE_GAME C
        WHERE R.CREATE_USER = M.USERID(+)
          AND R.REG_NUM
            = C.REVIEWREGNUM(+)
          AND R.DEL = 'N'
          and R.CREATE_USER = #{userid} /*검색*/ /*디테일 진입*/
        ORDER BY CREATEDATE DESC
    </select>
    <!-- game_rating 테이블과 game 테이블을 join 해서 r.gnum 으로 g.gametitle과 g.bgg_thumbnail 컬럼값 가져옴
그리고 game_rating_like 테이블의 count를 r.userid 로 가져옴 -->
    <select id="rateListbyUserid" resultType="gameRatingDTO">
        select r.userid
             , count(l.user_id)                     as likeCount
             , r.gnum
             , g.GAMETITLE
             , g.BGG_THUMBNAIL
             , r.rating
             , r.weight
             , r.participant1
             , r.participant2
             , r.participant3
             , r.participant4
             , r.participant5
             , r.rating_comment
             , to_char(r.create_date, 'YYYY-MM-dd') as create_date
        from game_rating r
                 join game g on r.GNUM = g.GNUM
                 left join game_rating_like l on r.userid = l.writer_id
        where r.userid = #{userid}
        group by r.userid, r.gnum, r.rating, r.weight, r.participant1, r.participant2, r.participant3, r.participant4,
                 r.participant5, r.rating_comment, r.create_date, g.GAMETITLE, g.BGG_THUMBNAIL
        order by likeCount desc, create_date desc
    </select>

    <!--마이페이지에서 중고거래 게시판에 작성한 목록 출력 sql
썸네일 이미지 포함, tb_files 테이블에서 MIN(file_reg_num)으로 tb_num에 해당하는 이미지 파일 중 가장 빠른 순번을 가져옴-->
    <select id="getTbList" resultType="tboardDto">
        select t.tb_num
             , t.title
             , t.price
             , t.description
             , t.view_count
             , (select count(*) FROM TB_COMMENTS WHERE tb_num = t.TB_NUM) as re_count /*댓글 수*/
             , (select count(*) FROM TRADEGOOD WHERE TB_NUM = t.TB_NUM)   as good_count /*좋아요 수*/
             , t.category
             , t.CREATE_DATE
             , t.create_user
             , t.del
             , t.update_user
             , t.update_date
             , t.address1
             , t.address2
             , f.fullName                                                 as first_img --썸네일 이미지

        FROM t_board t
                 LEFT JOIN (SELECT MIN(file_reg_num) AS min_file_reg_num
                                 , FULLNAME
                                 , TB_NUM
                            FROM TB_FILES
                            GROUP BY TB_NUM, FULLNAME) f ON t.TB_NUM = f.TB_NUM

        WHERE t.del = 'N'
          AND CREATE_USER = #{userid}
        order by t.tb_num desc
    </select>
</mapper>














